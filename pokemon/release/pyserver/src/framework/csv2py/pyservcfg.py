#-*- coding=utf-8 -*-
# csv2py
# 生成py的配置
'''
csv2py server config
'''

import datetime


SRC_PATH = './config/'
SRC_FILE_LIST = None
LUA_FILE_NAME = './config_csv.py'
LUA_MODULE_NAME = 'csv'
PY_NAMETUPLE = True
FOR_LUA = False
LANGUAGE = None

LUA_NIL_VALUE = 'None'
LUA_TRUE_VALUE = 'True'
LUA_FALSE_VALUE = 'False'
LUA_ARRAY_FUNC = lambda array: '(%s,)' % ', '.join(array) if len(array) > 0 else ()
LUA_MAP_KV_FUNC = lambda k, v: '%s : %s' % (k, v)
LUA_MAP_FUNC = lambda values: '{%s}' % (', '.join(values))
# LUA_ELEM_KV_FUNC = lambda key, value: "'%s' : %s" % (key, value)
# LUA_ELEM_KV_FUNC = lambda key, value: str(value)
def LUA_ELEM_KV_FUNC(key, value):
	try:
		return str(value)
	except:
		#print key, value
		return value
# LUA_ROW_FUNC = lambda row, elems: "\t%s : {\r\n\t\t%s\r\n\t}" % (row, elems)
LUA_ROW_FUNC = lambda row, elems: "\t%s : __class__(%s)" % (row, ', '.join(elems))
LUA_DIR_FUNC = lambda dirName, fileName: "%s['%s']" % (dirName, fileName)
LUA_CSV_FUNC = lambda dirs: '%s["%s"]' % (dirs[0], '"]["'.join(dirs[1:]))
# LUA_MODULE_FUNC = lambda name, data, defData: '''%s = {
# %s,
# 	'__default' : {
# 		%s
# 	}
# }
# ''' % (name, ',\r\n'.join(data), defData)
def LUA_MODULE_FUNC(name, data, defElems):
	tuplename = '__' + name.replace('[', '_').replace(']', '_').replace('\'', '')
	data = ',\r\n'.join(data)
	if len(data) > 0:
		data += ',\r\n'
	ret = '''%s = {
%s
	'__default' : __class__(%s)
}
''' % (name, data, ', '.join(defElems))
	return ret.replace('__class__', tuplename)

def LUA_MODULE_NAMETUPLE_FUNC(name, keys):
	tuplename = '__' + name.replace('[', '_').replace(']', '_').replace('\'', '')
	tuplekeys = ','.join(['\'%s\'' % x[1] for x in keys][1:])
	return '%s = namedtuple(\'%s\', [%s])\r\n' % (tuplename, tuplename, tuplekeys)


LUA_HEAD_SRC = """#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# auto generated by csv2py
# date: %s
# language: %s
#
# DON'T EDIT THIS FILE !!!
#

from collections import namedtuple

""" % (datetime.datetime.now(), LANGUAGE)
LUA_OTHER_SRC = '''
'''
LUA_OTHER_SRC2 = ""
IGNORE_FILES = [
	r'[^_]buff.csv',
	r'buff_group_relation.csv',
	r'child_unit.csv',
	r'skill_process.csv',
	# r'stage.csv',
	r'scene[/\\]',
	r'stage[/\\]',
	r'baseAttribute[/\\](?!(base)[/\\]).*?[/\\]',

	r'^weather', # 战斗天气相关表
	r'skill_process.csv',
	r'skill_auto_test.csv',
	r'unit_csv_test.csv',
	r'game_end_special_rule.csv',
	r'effect_event.csv',
	r'formula_const.csv',
	r'damage_process.csv',
	r'combat_manual.csv',
	r'draw_preview.csv',
	r'card_battle_recommend.csv',
	r'cityscene.csv',
	r'citysound.csv',
	r'color.csv',
	r'huodong_display_replace.csv',
	r'loading_tips.csv',
	r'scene_demon_correct.csv',
	r'scene_level_correct',
	r'scene_monster_story',
	r'volley_game_parm_adjust.csv',
]

IGNORE_KEYS = [
	(r'scene[/\\]', r'^(?!monsterId).*$'),
]